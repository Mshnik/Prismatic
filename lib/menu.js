// Generated by CoffeeScript 1.9.3

/* Code dealing with creation and maintenence on the menu */
this.menuHeaderStyle = {
  font: "bold 20px 'Futura' ",
  fill: "white"
};

this.menuContentStyle = {
  font: "16px 'Futura' ",
  fill: "gray"
};

this.goalContainerIndex = 11;


/* Creates the menu. Has children:
    0) background image
    1) icon
    2) title
    3) prev level
    4) level text
    5) next level
    6) reset level
    7) help button
    8) easy button
    9) med button
    10) hard button
    11) goal container
 */

this.initMenu = function() {
  var bck, easyBorder, easyButton, hardBorder, hardButton, helpBack, helpBorder, helpButton, lvlText, medBorder, medButton, menuicon, nextLvl, prevLvl, resetBack, resetBorder, resetButton, titleText;
  bck = PIXI.Sprite.fromImage(this.siteprefix + "assets/img/galaxy-28.jpg");
  this.menu.addChild(bck);
  menuicon = PIXI.Sprite.fromImage(this.siteprefix + "assets/img/Icon_v2.png");
  menuicon.scale.x = menuicon.scale.y = 0.5;
  this.menu.addChild(menuicon);
  titleText = new PIXI.Text("prismatic", this.menuHeaderStyle);
  this.menu.addChild(titleText);
  if (this.level > 1) {
    prevLvl = new PIXI.Text("<< " + (this.level - 1), this.menuContentStyle);
    prevLvl.interactive = true;
  } else {
    prevLvl = new PIXI.Text("     ", this.menuContentStyle);
    prevLvl.interactive = false;
  }
  prevLvl.buttonMode = true;
  prevLvl.click = function() {
    var num;
    num = window.level - 1 < 10 ? "0" + (window.level - 1) : "" + (window.level - 1);
    window.BOARDNAME = "board" + num;
    resetButton.click();
  };
  prevLvl.tap = prevLvl.click;
  this.menu.addChild(prevLvl);
  lvlText = new PIXI.Text(this.level + " of 50", this.menuContentStyle);
  this.menu.addChild(lvlText);
  if (this.level < 50) {
    nextLvl = new PIXI.Text((this.level + 1) + " >>", this.menuContentStyle);
    nextLvl.interactive = true;
  } else {
    nextLvl = new PIXI.Text("     ", this.menuContentStyle);
    nextLvl.interactive = false;
  }
  nextLvl.buttonMode = true;
  nextLvl.click = function() {
    var num;
    num = window.level + 1 < 10 ? "0" + (window.level + 1) : "" + (window.level + 1);
    window.BOARDNAME = "board" + num;
    resetButton.click();
  };
  nextLvl.tap = nextLvl.click;
  this.menu.addChild(nextLvl);
  resetButton = new PIXI.Text("Reset", this.menuContentStyle);
  resetButton.interactive = true;
  resetButton.buttonMode = true;
  resetButton.click = function() {
    if (window.winContainer !== void 0 && window.winContainer !== null) {
      window.stage.removeChild(window.winContainer);
    }
    window.winContainer = null;
    window.gameOn = true;
    window.showWinContainer = true;
    window.clearBoard();
    Board.loadBoard(window.BOARDNAME);
    window.updateMenu();
  };
  resetButton.tap = resetButton.click;
  resetBack = new PIXI.Sprite(this.backBox(50, 25));
  resetBack.position.x = -15;
  resetBack.position.y = -11;
  resetButton.addChild(resetBack);
  resetBorder = new PIXI.Sprite(this.borderBox(50, 25));
  resetBorder.position.x = -15;
  resetBorder.position.y = -11;
  resetButton.addChild(resetBorder);
  this.menu.addChild(resetButton);
  helpButton = new PIXI.Text("Help", this.menuContentStyle);
  helpButton.interactive = true;
  helpButton.buttonMode = true;
  helpButton.click = function() {
    if (window.winContainer === void 0 || window.winContainer === null) {
      if (window.gameOn) {
        window.gameOn = false;
        window.stage.addChild(window.helpContainer);
      } else {
        helpContainer.close();
      }
    }
  };
  helpButton.tap = helpButton.click;
  helpBack = new PIXI.Sprite(this.backBox(45, 25));
  helpBack.position.x = -15;
  helpBack.position.y = -11;
  helpButton.addChild(helpBack);
  helpBorder = new PIXI.Sprite(this.borderBox(45, 25));
  helpBorder.position.x = -15;
  helpBorder.position.y = -11;
  helpButton.addChild(helpBorder);
  this.menu.addChild(helpButton);
  easyButton = new PIXI.Text("Easy", this.menuContentStyle);
  easyButton.interactive = true;
  easyButton.buttonMode = true;
  easyButton.click = function() {
    if (window.difficulty !== window.Game.EASY) {
      window.difficulty = Game.EASY;
      resetButton.click();
    }
  };
  easyButton.tap = easyButton.click;
  easyBorder = new PIXI.Sprite(this.borderBox(45, 25));
  easyBorder.position.x = -15;
  easyBorder.position.y = -11;
  easyButton.addChild(easyBorder);
  this.menu.addChild(easyButton);
  medButton = new PIXI.Text("Med", this.menuContentStyle);
  medButton.interactive = true;
  medButton.buttonMode = true;
  medButton.click = function() {
    if (window.difficulty !== Game.MEDIUM) {
      window.difficulty = Game.MEDIUM;
      resetButton.click();
    }
  };
  medButton.tap = medButton.click;
  medBorder = new PIXI.Sprite(this.borderBox(45, 25));
  medBorder.position.x = -15;
  medBorder.position.y = -11;
  medButton.addChild(medBorder);
  this.menu.addChild(medButton);
  hardButton = new PIXI.Text("Hard", this.menuContentStyle);
  hardButton.interactive = true;
  hardButton.buttonMode = true;
  hardButton.click = function() {
    if (window.difficulty !== Game.HARD) {
      window.difficulty = Game.HARD;
      resetButton.click();
    }
  };
  hardButton.tap = hardButton.click;
  hardBorder = new PIXI.Sprite(this.borderBox(45, 25));
  hardBorder.position.x = -15;
  hardBorder.position.y = -11;
  hardButton.addChild(hardBorder);
  this.menu.addChild(hardButton);
  this.menu.addChild(this.goalContainer);
  this.updateMenu();
};

this.g = new PIXI.Graphics();

this.borderBox = function(width, height) {
  this.g.clear();
  this.g.lineStyle(1.5, 0x777777, 1);
  this.g.drawRect(0, 0, width, height);
  return this.g.generateTexture();
};

this.backBox = function(width, height) {
  this.g.clear();
  this.g.beginFill(0xFFFFFF, 0.5);
  this.g.drawRect(0, 0, width, height);
  this.g.endFill();
  return this.g.generateTexture();
};

this.updateMenu = function() {
  var b, backingTex, diffBorder, difficultyButtons, i, len, lvlText, nextBorder, nextLvl, prevBorder, prevLvl, size;
  lvlText = this.menu.children[4];
  lvlText.setText(this.level + " of 50");
  prevLvl = this.menu.children[3];
  if (prevLvl.children.length > 0) {
    prevLvl.removeChild(prevLvl.getChildAt(0));
  }
  if (this.level > 1) {
    prevLvl.setText("<< " + (this.level - 1));
    prevLvl.interactive = true;
    size = this.level > 10 ? 55 : 45;
    prevBorder = new PIXI.Sprite(this.borderBox(size, 25));
    prevBorder.position.x = -15;
    prevBorder.position.y = -11;
    prevLvl.addChild(prevBorder);
  } else {
    prevLvl.setText("     ");
    prevLvl.interactive = false;
  }
  nextLvl = this.menu.children[5];
  if (nextLvl.children.length > 0) {
    nextLvl.removeChild(nextLvl.getChildAt(0));
  }
  if (this.level < 50) {
    nextLvl.setText((this.level + 1) + " >>");
    nextLvl.interactive = true;
    size = this.level > 8 ? 55 : 45;
    nextBorder = new PIXI.Sprite(this.borderBox(size, 25));
    nextBorder.position.x = -15;
    nextBorder.position.y = -11;
    nextLvl.addChild(nextBorder);
  } else {
    nextLvl.setText("     ");
    nextLvl.interactive = false;
  }
  backingTex = this.backBox(45, 25);
  difficultyButtons = [this.menu.children[8], this.menu.children[9], this.menu.children[10]];
  for (i = 0, len = difficultyButtons.length; i < len; i++) {
    b = difficultyButtons[i];
    try {
      b.removeChild(b.getChildAt(1));
    } catch (_error) {

    }
  }
  diffBorder = new PIXI.Sprite(backingTex);
  diffBorder.position.x = -15;
  diffBorder.position.y = -11;
  difficultyButtons[this.difficulty].addChild(diffBorder);
};
